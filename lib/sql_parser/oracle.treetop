module SqlParser
  grammar Oracle
    include OracleReservedWord
    include OracleCondition
    include OracleExpression
    include OracleSelect
    include OracleUpdate
    rule sql
      q:(select_statement / update_statement) {
        def ast
          q.ast
        end
      }
    end


    rule ident
      !keyword [a-zA-Z] [a-zA-Z0-9_]* <Identifier>
    end

    rule space
      ' '+
    end


    rule hint # not implemented
      '/*+' '*/' {
        def ast
          nil
        end
      }
    end

    rule t_alias
      ident
    end

    rule c_alias
      ident
    end

    rule table_name
      ident
    end

    rule column_name
      ident
    end

    rule schema_name
      ident
    end

    rule select_sources
      ident
    end

    rule number_literal
      '-'? [0-9]+ ([.] [0-9]+)? <NumberLiteral>
    end

    rule position
      integer
    end

    rule integer
      '-'? [0-9]+ <NumberLiteral>
    end

    rule text_literal
      "'" ("\\'" / !"'" .)* "'" <TextLiteral>
    end

    rule table_reference
      (
        schema_name '.' table_name /
        table_name
      ) ('@' dblink)?
    end

    rule dblink
      ident
    end

    rule cursor_name
      ident
    end

    rule sequence
      ident space? '.' space? (currval_keyword / nextval_keyword)
    end

  end
end
