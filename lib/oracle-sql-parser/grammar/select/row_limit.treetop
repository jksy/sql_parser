module OracleSqlParser::Grammar::Select
  grammar RowLimit
    rule row_limiting_clause
      fetch:fetch {
        def ast
          OracleSqlParser::Ast::RowLimitingClause[
            # :offset_keyword => offset.offset_keyword,
            # :offset => offset.offset,
            :fetch => fetch.ast
          ]
        end
      }
    end

    rule offset
      offset_keyword space offset:number_literal space? (row_keyword / rows_keyword) {
        def ast
          # do not support offset
          raise NotImplemented
          # OracleSqlParser::Ast::Hash[
          #   offset_keyword: offset_keyword,
          #   offset: OracleSqlParser::Ast::NumberLiteral[value: offset],
          # ]
        end
      }
    end

    rule fetch
      fetch_keyword space
        first:(first_keyword / next_keyword) space
        rowcount:(rowcount:integer / percentage:integer percentage_keyword)? space
        rows:(row_keyword / rows_keyword) space
        only:(only_keyword / with_keyword space ties_keyword)
      {
        def ast
          OracleSqlParser::Ast::Hash[
            fetch_keyword: fetch_keyword,
            first_keyword: first.try(:first_keyword),
            next_keyword: first.try(:next_keyword),
            rowcount: rowcount.try(:rowcount),
            percentage: rowcount.try(:percentage),
            percentage_keyword: rowcount.try(:percentage_keyword),
            row_keyword: rows.try(:row_keyword),
            rows_keyword: rows.try(:rows_keyword),
            only_keyword: only.try(:only_keyword),
            with_keyword: only.try(:with_keyword),
            ties_keyword: only.try(:ties_keyword),
          ]
        end
      }
    end
  end
end
